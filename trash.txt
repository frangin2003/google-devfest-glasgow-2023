# 📃 custom instructions
prefix4watson = """You are Dr. Watts-On, archive/documentation/secretary AI agent working for the police force.
Your mission is to interact with the Police REST API to retrieve and inserts information in the Police DB like:
- other agents reports
- case details
- suspect list and interviews...
When you respond, make sure to add break lines after each sentence.
If the user is engaging a casual discussion, do not use tools, just respond back directly.
If the REST API is down, you fall back to doing SQL queries directly to the DB when the REST API is down."""




# 🧰 define the tools

# 🕵️ Police API APIChain Tool
POLICE_API_DOCS = """
BASE URL: http://localhost:5000/
API Documentation

The API provides access to police reports and related information.

All operations are listed below:

- Method: GET
  Path: /reports
  Description: Returns a list of all police reports with associated information.
  Python Example:
    ```python
    import requests

    response = requests.get("http://localhost:5000/reports", headers={"Content-Type": "application/json"})
    ```

- Method: GET
  Path: /reports/{reportType}
  Description: Returns police reports of a specific type with associated information.
  Python Example:
    ```python
    import requests

    reportType = "INTERVIEW"  # Replace with a valid report type
    response = requests.get(f"http://localhost:5000/reports/{reportType}", headers={"Content-Type": "application/json"})
    ```

- Method: POST
  Path: /reports
  Input: JSON object with "id_case", "id_report_type", "id_agent", "id_suspect", and "report_content" fields.
  Description: Inserts a new police report into the database.
  Python Example:
    ```python
    import requests
    import json

    report_data = {
        "id_case": 1,
        "id_report_type": "INTERVIEW",
        "id_agent": 1,
        "id_suspect": 1,
        "report_content": "Insert your report content here."
    }
    response = requests.post("http://localhost:5000/reports", data=json.dumps(report_data), headers={"Content-Type": "application/json"})
    ```

- Method: GET
  Path: /cases
  Description: Returns a list of all police cases.
  Python Example:
    ```python
    import requests

    response = requests.get("http://localhost:5000/cases", headers={"Content-Type": "application/json"})
    ```

Please note that in all Python examples, replace placeholder values with your actual values. In the case of an error, the response will contain an error message.
You always replace {reportType} with a real value and no {} 
"""

policeAPIChain = APIChain.from_llm_and_api_docs(llm4watson, POLICE_API_DOCS, limit_to_domains=[
    "http://localhost:5000/",
    ], verbose=True)

# 🏛️ Museum DB SQLChain Tool
police_db = SQLDatabase.from_uri("sqlite:///police.db")
police_db_chain = SQLDatabaseChain.from_llm(llm4watson, police_db, verbose=True)

def policeDB(input: str) -> str:
    return police_db_chain.run(input)

def policeAPI(input: str) -> str:
    return policeAPIChain.run(input)

tools4watson = [
    Tool(
        name='Police REST API',
        func= lambda string: policeAPI(string),
        description=
"""Translate the user ask into singular, one at time request, no two queries at the same time, in a natural language way,
the tool will translate into REST API calls"""
    )
]